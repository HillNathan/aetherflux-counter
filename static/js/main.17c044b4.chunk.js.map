{"version":3,"sources":["components/InfoHeader/index.js","components/FauxBatons/index.js","components/FunctionButton/index.js","components/Banner/index.js","App.js","reportWebVitals.js","index.js"],"names":["InfoHeader","props","className","label","info","FauxBatons","theClass","colWidth","onClick","updateLife","adjustment","operation","fauxLabel","FunctionButton","myStyle","doFunction","Banner","bannerInfo","App","state","lifeTotal","spellsThisTurn","adjustSpellCount","number","change","a","spells","setState","addSpell","then","response","temp","resetSpellCount","resetApp","deathRay","newLife","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17c044b4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction InfoHeader(props) {\r\n    return(\r\n        <div className=\"row\">\r\n        <div className=\"col-1 spacer\"></div>  \r\n        <div className=\"col-10 text-label-1\">\r\n          {props.label} = {props.info}\r\n        </div>\r\n        <div className=\"col-1 spacer\"></div>  \r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default InfoHeader","import React from 'react'\r\nimport '../../App.css'\r\n\r\nfunction FauxBatons(props) {\r\n    const theClass = \"col-\" + props.colWidth\r\n    return (\r\n        <div className={\"button-holder \" + theClass}>\r\n            <div className=\"faux-baxton\"\r\n                onClick={() => props.updateLife(props.adjustment, props.operation)}>\r\n            {props.fauxLabel}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FauxBatons","import React from 'react'\r\n\r\nfunction FunctionButton(props) {\r\n    const myStyle = \"faux-baxton-\" + props.myStyle\r\n    return(\r\n        <div className=\"col-5 button-holder\">\r\n            <div className={myStyle}\r\n                    onClick={() => props.doFunction()}>\r\n                {props.label}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FunctionButton","import React from 'react'\r\n\r\nfunction Banner(props) {\r\n    return(\r\n        <div className=\"row justify-content-center notation\">\r\n            <div className=\"col-2\"></div>\r\n                <div className=\"col-8\">\r\n                {props.bannerInfo}\r\n                </div>\r\n            <div className=\"col-2\"></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Banner","import React, { Component } from 'react'\n\nimport InfoHeader from './components/InfoHeader'\nimport FauxBatons from './components/FauxBatons'\nimport FunctionButton from './components/FunctionButton'\nimport Banner from './components/Banner'\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    lifeTotal : 40,\n    spellsThisTurn : 0,\n  }\n\n  adjustSpellCount = async (number, change) => {\n    var spells = this.state.spellsThisTurn\n    if(change === \"add\") spells = spells + number\n    else spells = spells - number\n    this.setState({\n      spellsThisTurn: spells\n    })\n  }\n\n  addSpell = () => {\n    this.adjustSpellCount(1 ,\"add\")\n    .then(response => {\n      var spells = this.state.spellsThisTurn\n      this.updateLife(spells, \"add\")  \n    })\n  }\n\n  updateLife = (number, change) => {\n    // change should be only \"add\" to increase the life total, or something else to decrease the life total\n    var temp = this.state.lifeTotal\n    if(change === \"add\") temp = temp + number\n    else temp = temp - number\n    this.setState({\n      lifeTotal : temp\n    })\n  }\n\n  resetSpellCount = () => {\n    this.setState({\n      spellsThisTurn: 0\n    })\n  }\n\n  resetApp = () => {\n    this.setState({\n      lifeTotal : 40,\n      spellsThisTurn : 0,\n    })\n  }\n\n  deathRay = () => {\n    // Grand Moff Tarkin would be proud of what we have built here....\n    if(this.state.lifeTotal > 50) {\n      var newLife = this.state.lifeTotal\n      newLife = newLife - 50\n      this.setState({\n        lifeTotal: newLife\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n          Aetherflux Reservoir\n          <br/>\n          Control Panel\n        </header>\n        <div className=\"container\">\n\n          <InfoHeader\n            info={this.state.spellsThisTurn}\n            label={\"Spells Cast\"} />\n\n          <InfoHeader\n            info={this.state.lifeTotal}\n            label={\"Life Total\"} />\n\n          <div className= \"life-support\">     \n            <Banner \n              bannerInfo=\"Adjust Life Totals\" />\n\n            <div className=\"row justify-content-center\">\n              <FauxBatons\n                updateLife={this.updateLife}\n                colWidth={2}\n                adjustment={5}\n                operation={\"lose\"} \n                fauxLabel={\"-5\"} />\n              <FauxBatons\n                updateLife={this.updateLife}\n                colWidth={3}\n                adjustment={1}\n                operation={\"lose\"} \n                fauxLabel={\"-1\"} />\n              <FauxBatons\n                updateLife={this.updateLife}\n                colWidth={3}\n                adjustment={1}\n                operation={\"add\"} \n                fauxLabel={\"+1\"} />                \n              <FauxBatons\n                updateLife={this.updateLife}\n                colWidth={2}\n                adjustment={5}\n                operation={\"add\"} \n                fauxLabel={\"+5\"} />\n            </div>\n          </div>\n\n          <div className= \"life-support\">     \n            <Banner \n              bannerInfo=\"Adjust Spell Count\" />\n\n            <div className=\"row justify-content-center\">\n              <div className=\"col-2\"></div>\n              <FauxBatons\n                updateLife={this.adjustSpellCount}\n                colWidth={3}\n                adjustment={1}\n                operation={\"lose\"} \n                fauxLabel={\"-1\"} />\n              <FauxBatons\n                updateLife={this.adjustSpellCount}\n                colWidth={3}\n                adjustment={1}\n                operation={\"add\"} \n                fauxLabel={\"+1\"} />\n              <div className=\"col-2\"></div>\n            </div>\n          </div>\n\n          <div className=\"row justify-content-center\">\n            <FunctionButton\n              myStyle=\"lg\"\n              label=\"Cast a Spell\"\n              doFunction={this.addSpell} />\n            <FunctionButton                 \n              myStyle=\"lg\"\n              label=\"Fire Death Ray\"\n              doFunction={this.deathRay} />\n          </div>\n\n          <div className=\"row justify-content-center\">\n          <FunctionButton                 \n              myStyle=\"thin\"\n              label=\"End Turn\"\n              doFunction={this.resetSpellCount} />\n          <FunctionButton                 \n              myStyle=\"thin\"\n              label=\"Reset App\"\n              doFunction={this.resetApp} />\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}